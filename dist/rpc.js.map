{"version":3,"file":"rpc.js","sources":["../src/types/errors/RpcCustomErrorDecorator.ts","../node_modules/stackframe/stackframe.js","../node_modules/error-stack-parser/error-stack-parser.js","../src/types/RpcError.ts","../src/connection/RpcId.ts","../src/types/errors/PredefinedErrors.ts","../src/internal/RegisteredTypes.ts","../src/types/functions/PendingCall.ts","../src/types/functions/FunctionCallContext.ts","../src/types/RpcFunction.ts","../src/types/RpcObject.ts","../src/types/data/DynamicData.ts","../src/types/data/DataOutput.ts","../src/connection/Connection.ts","../src/types/data/DataInput.ts","../src/connection/WebSocketConnection.ts","../src/connection/RpcName.ts","../src/types/data/CustomDynamicTypeDecorator.ts","../src/types/RpcProviderDecorator.ts","../src/rpc.ts"],"sourcesContent":["import {RpcError} from \"../RpcError.js\";\r\n\r\nexport const RpcCustomErrors:[\r\n\tMap<string,typeof RpcError>,\r\n\tMap<typeof RpcError,string>\r\n]=[new Map,new Map];\r\nexport function RpcCustomError(typeTag: string){\r\n\treturn function(target: typeof RpcError){\r\n\t\tconst [tagToError,errorToTag]=RpcCustomErrors;\r\n\t\ttagToError.set(typeTag,target);\r\n\t\terrorToTag.set(target,typeTag);\r\n\t};\r\n}","(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('stackframe', [], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.StackFrame = factory();\n    }\n}(this, function() {\n    'use strict';\n    function _isNumber(n) {\n        return !isNaN(parseFloat(n)) && isFinite(n);\n    }\n\n    function _capitalize(str) {\n        return str.charAt(0).toUpperCase() + str.substring(1);\n    }\n\n    function _getter(p) {\n        return function() {\n            return this[p];\n        };\n    }\n\n    var booleanProps = ['isConstructor', 'isEval', 'isNative', 'isToplevel'];\n    var numericProps = ['columnNumber', 'lineNumber'];\n    var stringProps = ['fileName', 'functionName', 'source'];\n    var arrayProps = ['args'];\n    var objectProps = ['evalOrigin'];\n\n    var props = booleanProps.concat(numericProps, stringProps, arrayProps, objectProps);\n\n    function StackFrame(obj) {\n        if (!obj) return;\n        for (var i = 0; i < props.length; i++) {\n            if (obj[props[i]] !== undefined) {\n                this['set' + _capitalize(props[i])](obj[props[i]]);\n            }\n        }\n    }\n\n    StackFrame.prototype = {\n        getArgs: function() {\n            return this.args;\n        },\n        setArgs: function(v) {\n            if (Object.prototype.toString.call(v) !== '[object Array]') {\n                throw new TypeError('Args must be an Array');\n            }\n            this.args = v;\n        },\n\n        getEvalOrigin: function() {\n            return this.evalOrigin;\n        },\n        setEvalOrigin: function(v) {\n            if (v instanceof StackFrame) {\n                this.evalOrigin = v;\n            } else if (v instanceof Object) {\n                this.evalOrigin = new StackFrame(v);\n            } else {\n                throw new TypeError('Eval Origin must be an Object or StackFrame');\n            }\n        },\n\n        toString: function() {\n            var fileName = this.getFileName() || '';\n            var lineNumber = this.getLineNumber() || '';\n            var columnNumber = this.getColumnNumber() || '';\n            var functionName = this.getFunctionName() || '';\n            if (this.getIsEval()) {\n                if (fileName) {\n                    return '[eval] (' + fileName + ':' + lineNumber + ':' + columnNumber + ')';\n                }\n                return '[eval]:' + lineNumber + ':' + columnNumber;\n            }\n            if (functionName) {\n                return functionName + ' (' + fileName + ':' + lineNumber + ':' + columnNumber + ')';\n            }\n            return fileName + ':' + lineNumber + ':' + columnNumber;\n        }\n    };\n\n    StackFrame.fromString = function StackFrame$$fromString(str) {\n        var argsStartIndex = str.indexOf('(');\n        var argsEndIndex = str.lastIndexOf(')');\n\n        var functionName = str.substring(0, argsStartIndex);\n        var args = str.substring(argsStartIndex + 1, argsEndIndex).split(',');\n        var locationString = str.substring(argsEndIndex + 1);\n\n        if (locationString.indexOf('@') === 0) {\n            var parts = /@(.+?)(?::(\\d+))?(?::(\\d+))?$/.exec(locationString, '');\n            var fileName = parts[1];\n            var lineNumber = parts[2];\n            var columnNumber = parts[3];\n        }\n\n        return new StackFrame({\n            functionName: functionName,\n            args: args || undefined,\n            fileName: fileName,\n            lineNumber: lineNumber || undefined,\n            columnNumber: columnNumber || undefined\n        });\n    };\n\n    for (var i = 0; i < booleanProps.length; i++) {\n        StackFrame.prototype['get' + _capitalize(booleanProps[i])] = _getter(booleanProps[i]);\n        StackFrame.prototype['set' + _capitalize(booleanProps[i])] = (function(p) {\n            return function(v) {\n                this[p] = Boolean(v);\n            };\n        })(booleanProps[i]);\n    }\n\n    for (var j = 0; j < numericProps.length; j++) {\n        StackFrame.prototype['get' + _capitalize(numericProps[j])] = _getter(numericProps[j]);\n        StackFrame.prototype['set' + _capitalize(numericProps[j])] = (function(p) {\n            return function(v) {\n                if (!_isNumber(v)) {\n                    throw new TypeError(p + ' must be a Number');\n                }\n                this[p] = Number(v);\n            };\n        })(numericProps[j]);\n    }\n\n    for (var k = 0; k < stringProps.length; k++) {\n        StackFrame.prototype['get' + _capitalize(stringProps[k])] = _getter(stringProps[k]);\n        StackFrame.prototype['set' + _capitalize(stringProps[k])] = (function(p) {\n            return function(v) {\n                this[p] = String(v);\n            };\n        })(stringProps[k]);\n    }\n\n    return StackFrame;\n}));\n","(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('error-stack-parser', ['stackframe'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('stackframe'));\n    } else {\n        root.ErrorStackParser = factory(root.StackFrame);\n    }\n}(this, function ErrorStackParser(StackFrame) {\n    'use strict';\n\n    var FIREFOX_SAFARI_STACK_REGEXP = /(^|@)\\S+:\\d+/;\n    var CHROME_IE_STACK_REGEXP = /^\\s*at .*(\\S+:\\d+|\\(native\\))/m;\n    var SAFARI_NATIVE_CODE_REGEXP = /^(eval@)?(\\[native code])?$/;\n\n    return {\n        /**\n         * Given an Error object, extract the most information from it.\n         *\n         * @param {Error} error object\n         * @return {Array} of StackFrames\n         */\n        parse: function ErrorStackParser$$parse(error) {\n            if (typeof error.stacktrace !== 'undefined' || typeof error['opera#sourceloc'] !== 'undefined') {\n                return this.parseOpera(error);\n            } else if (error.stack && error.stack.match(CHROME_IE_STACK_REGEXP)) {\n                return this.parseV8OrIE(error);\n            } else if (error.stack) {\n                return this.parseFFOrSafari(error);\n            } else {\n                throw new Error('Cannot parse given Error object');\n            }\n        },\n\n        // Separate line and column numbers from a string of the form: (URI:Line:Column)\n        extractLocation: function ErrorStackParser$$extractLocation(urlLike) {\n            // Fail-fast but return locations like \"(native)\"\n            if (urlLike.indexOf(':') === -1) {\n                return [urlLike];\n            }\n\n            var regExp = /(.+?)(?::(\\d+))?(?::(\\d+))?$/;\n            var parts = regExp.exec(urlLike.replace(/[()]/g, ''));\n            return [parts[1], parts[2] || undefined, parts[3] || undefined];\n        },\n\n        parseV8OrIE: function ErrorStackParser$$parseV8OrIE(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !!line.match(CHROME_IE_STACK_REGEXP);\n            }, this);\n\n            return filtered.map(function(line) {\n                if (line.indexOf('(eval ') > -1) {\n                    // Throw away eval information until we implement stacktrace.js/stackframe#8\n                    line = line.replace(/eval code/g, 'eval').replace(/(\\(eval at [^()]*)|(,.*$)/g, '');\n                }\n                var sanitizedLine = line.replace(/^\\s+/, '').replace(/\\(eval code/g, '(').replace(/^.*?\\s+/, '');\n\n                // capture and preseve the parenthesized location \"(/foo/my bar.js:12:87)\" in\n                // case it has spaces in it, as the string is split on \\s+ later on\n                var location = sanitizedLine.match(/ (\\(.+\\)$)/);\n\n                // remove the parenthesized location from the line, if it was matched\n                sanitizedLine = location ? sanitizedLine.replace(location[0], '') : sanitizedLine;\n\n                // if a location was matched, pass it to extractLocation() otherwise pass all sanitizedLine\n                // because this line doesn't have function name\n                var locationParts = this.extractLocation(location ? location[1] : sanitizedLine);\n                var functionName = location && sanitizedLine || undefined;\n                var fileName = ['eval', '<anonymous>'].indexOf(locationParts[0]) > -1 ? undefined : locationParts[0];\n\n                return new StackFrame({\n                    functionName: functionName,\n                    fileName: fileName,\n                    lineNumber: locationParts[1],\n                    columnNumber: locationParts[2],\n                    source: line\n                });\n            }, this);\n        },\n\n        parseFFOrSafari: function ErrorStackParser$$parseFFOrSafari(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !line.match(SAFARI_NATIVE_CODE_REGEXP);\n            }, this);\n\n            return filtered.map(function(line) {\n                // Throw away eval information until we implement stacktrace.js/stackframe#8\n                if (line.indexOf(' > eval') > -1) {\n                    line = line.replace(/ line (\\d+)(?: > eval line \\d+)* > eval:\\d+:\\d+/g, ':$1');\n                }\n\n                if (line.indexOf('@') === -1 && line.indexOf(':') === -1) {\n                    // Safari eval frames only have function names and nothing else\n                    return new StackFrame({\n                        functionName: line\n                    });\n                } else {\n                    var functionNameRegex = /((.*\".+\"[^@]*)?[^@]*)(?:@)/;\n                    var matches = line.match(functionNameRegex);\n                    var functionName = matches && matches[1] ? matches[1] : undefined;\n                    var locationParts = this.extractLocation(line.replace(functionNameRegex, ''));\n\n                    return new StackFrame({\n                        functionName: functionName,\n                        fileName: locationParts[0],\n                        lineNumber: locationParts[1],\n                        columnNumber: locationParts[2],\n                        source: line\n                    });\n                }\n            }, this);\n        },\n\n        parseOpera: function ErrorStackParser$$parseOpera(e) {\n            if (!e.stacktrace || (e.message.indexOf('\\n') > -1 &&\n                e.message.split('\\n').length > e.stacktrace.split('\\n').length)) {\n                return this.parseOpera9(e);\n            } else if (!e.stack) {\n                return this.parseOpera10(e);\n            } else {\n                return this.parseOpera11(e);\n            }\n        },\n\n        parseOpera9: function ErrorStackParser$$parseOpera9(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)/i;\n            var lines = e.message.split('\\n');\n            var result = [];\n\n            for (var i = 2, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(new StackFrame({\n                        fileName: match[2],\n                        lineNumber: match[1],\n                        source: lines[i]\n                    }));\n                }\n            }\n\n            return result;\n        },\n\n        parseOpera10: function ErrorStackParser$$parseOpera10(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)(?:: In function (\\S+))?$/i;\n            var lines = e.stacktrace.split('\\n');\n            var result = [];\n\n            for (var i = 0, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(\n                        new StackFrame({\n                            functionName: match[3] || undefined,\n                            fileName: match[2],\n                            lineNumber: match[1],\n                            source: lines[i]\n                        })\n                    );\n                }\n            }\n\n            return result;\n        },\n\n        // Opera 10.65+ Error.stack very similar to FF/Safari\n        parseOpera11: function ErrorStackParser$$parseOpera11(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !!line.match(FIREFOX_SAFARI_STACK_REGEXP) && !line.match(/^Error created at/);\n            }, this);\n\n            return filtered.map(function(line) {\n                var tokens = line.split('@');\n                var locationParts = this.extractLocation(tokens.pop());\n                var functionCall = (tokens.shift() || '');\n                var functionName = functionCall\n                    .replace(/<anonymous function(: (\\w+))?>/, '$2')\n                    .replace(/\\([^)]*\\)/g, '') || undefined;\n                var argsRaw;\n                if (functionCall.match(/\\(([^)]*)\\)/)) {\n                    argsRaw = functionCall.replace(/^[^(]+\\(([^)]*)\\)$/, '$1');\n                }\n                var args = (argsRaw === undefined || argsRaw === '[arguments not available]') ?\n                    undefined : argsRaw.split(',');\n\n                return new StackFrame({\n                    functionName: functionName,\n                    args: args,\n                    fileName: locationParts[0],\n                    lineNumber: locationParts[1],\n                    columnNumber: locationParts[2],\n                    source: line\n                });\n            }, this);\n        }\n    };\n}));\n","import {DataInput,DataOutput,Rpc} from \"../rpc.js\";\r\nimport {RpcCustomErrors} from \"./errors/RpcCustomErrorDecorator.js\";\r\nimport ErrorStackParser,{StackFrame} from \"error-stack-parser\";\r\n\r\nfunction fixString(s:string){\r\n\treturn s.replaceAll(\"\\r\",\"\")\r\n\t\t.replaceAll(/^\\n+|\\n+$/g,\"\")\r\n\t\t.replaceAll(/^  +/gm,\"\\t\");\r\n}\r\n\r\nfunction framesToString(frames:StackFrame[]):string{\r\n\tlet result=\"\";\r\n\tfor(let frame of frames)\r\n\t\tif(frame.functionName?.includes(\"$RPC_MARKER_BEGIN$\")) break;\r\n\t\telse result+=\"\\n\\tat \"+frame;\r\n\treturn result;\r\n}\r\n\r\nfunction causeToString(cause:unknown):string{\r\n\tif(cause===undefined) return \"\";\r\n\tif(cause instanceof RpcError) return \"\\ncaused by: \"+cause.toString();\r\n\tif(cause instanceof Error)\r\n\t\treturn \"\\ncaused by: \"+fixString(cause.toString())\r\n\t\t\t+framesToString(ErrorStackParser.parse(cause))\r\n\t\t\t+causeToString(cause.cause);\r\n\treturn \"\\ncaused by: \"+fixString(cause?.toString()??\"null\");\r\n}\r\n\r\n\r\n//Remove RpcError inheritance from stack trace\r\nfunction removeFromStackTrace(e:typeof RpcError & {__proto__:any},ownStack:StackFrame[]):boolean{\r\n\tif((e===RpcError||removeFromStackTrace(e.__proto__,ownStack))\r\n\t\t&&ownStack[0].functionName?.replace(/^new /,\"\")===e.name){\r\n\t\townStack.shift();\r\n\t\treturn true;\r\n\t}else return false;\r\n}\r\n\r\nexport class RpcError extends Error{\r\n\t//public get type(){return this.name}\r\n\r\n\tpublic readonly from:string;\r\n\tpublic readonly data:Record<string,any>={};\r\n\t#ownStack:StackFrame[]=[];\r\n\r\n\tpublic get stackTrace(){\r\n\t\tlet result=this.#stackTrace;\r\n\t\tresult+=framesToString(this.#ownStack);\r\n\t\tresult+=this.#causes;\r\n\t\treturn result.replaceAll(/^\\n+/g,\"\");\r\n\t}\r\n\r\n\t#stackTrace:string=\"\";\r\n\t#appendStack=false;\r\n\treadonly #causes:string=\"\";\r\n\r\n\tconstructor(message:string);\r\n\tconstructor(message:string,cause:Error | unknown);\r\n\tconstructor(type:string | null,from:string | null,message:string | null,stackTrace:string | null);\r\n\tconstructor(type:string | null,from:string | null,message:string | null,stackTrace:string | null,cause:Error);\r\n\tconstructor(type:string | null,from:string | null,message:string | null,stackTrace:string | null,data:Record<string,any>);\r\n\tconstructor(type:string | null,from:string | null,message:string | null,stackTrace:string | null,data:Record<string,any>,cause:Error | unknown);\r\n\tconstructor(...args:\r\n\t\t\t\t\t[message:string] |\r\n\t\t\t\t\t[message:string,cause:Error | unknown] |\r\n\t\t\t\t\t[type:string | null,from:string | null,message:string | null,stackTrace:string | null] |\r\n\t\t\t\t\t[type:string | null,from:string | null,message:string | null,stackTrace:string | null,cause:Error] |\r\n\t\t\t\t\t[type:string | null,from:string | null,message:string | null,stackTrace:string | null,data:Record<string,any>] |\r\n\t\t\t\t\t[type:string | null,from:string | null,message:string | null,stackTrace:string | null,data:Record<string,any>,cause:Error | unknown]\r\n\t){\r\n\t\tlet type:string | null=null;\r\n\t\tlet from:string | null=null;\r\n\t\tlet message:string | null=null;\r\n\t\tlet stackTrace:string | null=null;\r\n\t\tlet data:Record<string,any>={};\r\n\t\tlet cause:Error | unknown | undefined=undefined;\r\n\r\n\t\tswitch(args.length){\r\n\t\t\tcase 1:\r\n\t\t\t\t[message]=args;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\t[message,cause]=args;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 4:\r\n\t\t\t\t[message,from,message,stackTrace]=args;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 5:\r\n\t\t\t\tif(args[4] instanceof RpcError) [message,from,message,stackTrace,cause]=args;\r\n\t\t\t\telse [message,from,message,stackTrace,data]=args;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 6:\r\n\t\t\t\t[message,from,message,stackTrace,data,cause]=args;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(\"Invalid arg count\");\r\n\t\t}\r\n\r\n\t\tif(cause!=null) super(message??undefined,{cause});\r\n\t\telse super(message??undefined);\r\n\r\n\t\tthis.name=type??this.constructor.name;\r\n\t\tthis.from=from??Rpc.prettyName;\r\n\r\n\t\tconst typeTag=RpcCustomErrors[1].get(this.constructor as any);\r\n\t\tif(typeTag!=null) this.data[\"$type\"]=typeTag;\r\n\t\tObject.assign(this.data,data??{});\r\n\r\n\r\n\t\tif(stackTrace==null){\r\n\t\t\tthis.#appendStack=true;\r\n\t\t\tthis.#ownStack=ErrorStackParser.parse(this);\r\n\t\t\tremoveFromStackTrace(this.constructor as any,this.#ownStack);\r\n\t\t}else{\r\n\t\t\tthis.#stackTrace=\"\\n\"+fixString(stackTrace);\r\n\t\t\tconst causeIndex=this.#stackTrace.indexOf(\"\\ncaused by: \");\r\n\t\t\tif(causeIndex!= -1){\r\n\t\t\t\tthis.#causes+=this.#stackTrace.substring(causeIndex);\r\n\t\t\t\tthis.#stackTrace=this.#stackTrace.substring(0,causeIndex);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.#causes+=causeToString(cause);\r\n\r\n\t\tthis.stack=this.toString();\r\n\t}\r\n\r\n\ttoString(){\r\n\t\tlet s=this.name+\"(\"+this.from+\")\";\r\n\t\tif(this.message?.trim()) s+=\": \"+this.message;\r\n\r\n\t\tconst trace=this.stackTrace;\r\n\t\tif(trace?.trim()) s+=\"\\n\"+trace;\r\n\r\n\t\treturn s;\r\n\t}\r\n\r\n\twrite(output:DataOutput){\r\n\t\toutput.writeString(this.name);\r\n\t\toutput.writeString(this.from);\r\n\t\toutput.writeString(this.message);\r\n\t\toutput.writeString(this.stackTrace);\r\n\t\toutput.writeString(Object.keys(this.data).length==0?null:JSON.stringify(this.data));\r\n\t}\r\n\r\n\tstatic read(input:DataInput){\r\n\t\tconst type=input.readString();\r\n\t\tconst from=input.readString()??\"???\";\r\n\t\tconst message=input.readString();\r\n\t\tconst stackTrace=input.readString()??\"\";\r\n\r\n\t\tlet data;\r\n\t\ttry{\r\n\t\t\tdata=JSON.parse(input.readString()??\"null\");\r\n\t\t}catch(e){\r\n\t\t\tif(e instanceof RangeError)\r\n\t\t\t\tdata={\"$info\":\"JsonData was not included, due to an old PlayifyRpc version\"};\r\n\t\t\telse throw e;\r\n\t\t}\r\n\r\n\t\treturn RpcError.create(type,from,message,stackTrace,data);\r\n\t}\r\n\r\n\tstatic create(type:string | null,from:string,message:string | null,stackTrace:string,data:Record<string,any>){\r\n\t\tconst typeTag=data?.[\"$type\"];\r\n\t\tconst constructor:typeof RpcError=RpcCustomErrors[0].get(typeTag)??RpcError;\r\n\t\treturn new constructor(type,from,message,stackTrace,data);\r\n\t}\r\n\r\n\r\n\tstatic wrapAndFreeze(e:Error):RpcError{\r\n\t\tif(e instanceof RpcError){\r\n\t\t\tif(!e.#appendStack) return e;\r\n\t\t\te.#appendStack=false;\r\n\t\t\te.#stackTrace+=framesToString(e.#ownStack);\r\n\t\t\te.#ownStack=[];\r\n\t\t\te.stack=e.toString();\r\n\t\t\treturn e;\r\n\t\t}\r\n\r\n\t\treturn new RpcError(\r\n\t\t\te.name,\r\n\t\t\te instanceof RpcError?e.from:null,\r\n\t\t\te.message,\r\n\t\t\tframesToString(ErrorStackParser.parse(e)).substring(1),\r\n\t\t\t{},\r\n\t\t\te.cause as Error,\r\n\t\t);\r\n\t}\r\n\r\n\tunfreeze(stackSource:Error,skip:number){\r\n\t\tif(this.#appendStack) return this;\r\n\t\tthis.#appendStack=true;\r\n\t\tthis.#ownStack=ErrorStackParser.parse(stackSource).slice(skip);\r\n\t\tthis.stack=this.toString();\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\ttrashLocalStack(){\r\n\t\tthis.#appendStack=false;\r\n\t\tthis.#ownStack=[];\r\n\t\tthis.stack=this.toString();\r\n\t\treturn this;\r\n\t}\r\n\r\n\tappend(type:string | null,method:string | null,args:any[] | null){\r\n\t\tthis.#stackTrace+=\"\\n\\trpc \"+(args==null\r\n\t\t\t?\"<<callLocal>>\"\r\n\t\t\t:(type??\"<<null>>\")+\".\"+(method??\"<<null>>\")+\"(\"+\r\n\t\t\targs.map(a=>JSON.stringify(a)).join(\",\")+\")\");\r\n\t\tthis.stack=this.toString();\r\n\t\treturn this;\r\n\t}\r\n}","export const isNodeJs=globalThis?.process?.versions?.node!=null;\r\n\r\nconst chars=\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\r\nexport const randomId=()=>Date.now().toString(36)+Array(10)\r\n\t.fill(undefined)\r\n\t.map(()=>chars[Math.floor(Math.random()*chars.length)])\r\n\t.join(\"\");\r\n\r\n\r\n//RpcId\r\nexport let RpcId:string;\r\nif(isNodeJs)\r\n\ttry{\r\n\t\tif(process?.versions.bun)\r\n\t\t\tRpcId=\"bun@\"+require(\"os\").hostname()+\"@\"+process.pid;\r\n\t\telse\r\n\t\t\t//@ts-ignore\r\n\t\t\t// noinspection JSUnresolvedReference\r\n\t\t\tRpcId=\"node@\"+process.binding(\"os\").getHostname()+\"@\"+process.pid;//Needed to not use top level await\r\n\t}catch{\r\n\t\tRpcId=\"node-alternative@\"+process.platform+\":\"+process.arch+\"@\"+process.pid;\r\n\t}\r\nelse if(\"document\" in globalThis) RpcId=\"web@\"+document.location+\"#\"+randomId();\r\nelse//Unknown Platform\r\n\tRpcId=\"js@\"+randomId();","import {RpcError} from \"../RpcError.js\";\r\nimport {RpcCustomError} from \"./RpcCustomErrorDecorator.js\";\r\n\r\nconst quoted=(s:string | null)=>s==null?\"null\":'\"'+s+'\"';\r\n\r\nexport abstract class RpcCallError extends RpcError{\r\n}\r\n\r\n@RpcCustomError(\"$type\")\r\nexport class RpcTypeNotFoundError extends RpcCallError{\r\n\tstatic new=(type:string | null)=>new RpcTypeNotFoundError(null,null,\r\n\t\t`Type ${quoted(type)} does not exist`,\"\",{type});\r\n}\r\n\r\n@RpcCustomError(\"$method\")\r\nexport class RpcMethodNotFoundError extends RpcCallError{\r\n\tstatic new=(type:string | null,method:string | null)=>new RpcMethodNotFoundError(null,null,\r\n\t\t`Method ${quoted(method)} does not exist on type ${quoted(type)}`,\"\",{type,method});\r\n}\r\n\r\n@RpcCustomError(\"$method-meta\")\r\nexport class RpcMetaMethodNotFoundError extends RpcMethodNotFoundError{\r\n\tstatic new=(type:string | null,meta:string | null)=>new RpcMetaMethodNotFoundError(null,null,\r\n\t\t`Meta-Method ${quoted(meta)} does not exist on type ${quoted(type)}`,\"\",{type,method:null,meta});\r\n}\r\n\r\n@RpcCustomError(\"$connection\")\r\nexport class RpcConnectionError extends RpcCallError{\r\n\tstatic new=(message:string | null)=>new RpcConnectionError(null,null,message,\"\");\r\n}\r\n\r\n@RpcCustomError(\"$eval\")\r\nexport class RpcEvalError extends RpcCallError{\r\n}","import {isConnected} from \"../connection/WebSocketConnection.js\";\r\nimport {randomId,RpcId} from \"../connection/RpcId.js\";\r\nimport {callRemoteFunction} from \"../types/functions/FunctionCallContext.js\";\r\nimport {RpcObjectGetMethods} from \"../types/RpcObject.js\";\r\nimport {RpcError} from \"../types/RpcError.js\";\r\nimport {RpcMetaMethodNotFoundError,RpcMethodNotFoundError} from \"../types/errors/PredefinedErrors.js\";\r\n\r\n\r\nexport type Func=(...args:any[])=>Promise<any>;\r\nexport type Invoker={\r\n\t[RpcObjectGetMethods]?:()=>Promise<string[]>,\r\n\t[s:string]:Func | any,\r\n};\r\nexport const registeredFunctions:Invoker=Object.create(null);\r\nexport const registeredTypes=new Map<string,Invoker>();\r\nregisteredTypes.set(\"$\"+RpcId,registeredFunctions);\r\n\r\n\r\nexport async function generateTypeName(){\r\n\treturn \"$\"+RpcId+\"$\"+randomId();\r\n}\r\n\r\nexport async function registerType(type:string,invoker:Invoker):Promise<void>{\r\n\tif(registeredTypes.has(type)) return;\r\n\tregisteredTypes.set(type,invoker);\r\n\t\r\n\ttry{\r\n\t\tif(isConnected)\r\n\t\t\tawait callRemoteFunction(null,'+',type);\r\n\t}catch(e){\r\n\t\tconsole.warn(e);\r\n\r\n\t\tregisteredTypes.delete(type);\r\n\t}\r\n}\r\n\r\nexport async function unregisterType(type:string):Promise<void>{\r\n\tif(!registeredTypes.has(type)) return;\r\n\r\n\ttry{\r\n\t\tif(isConnected)\r\n\t\t\tawait callRemoteFunction(null,'-',type);\r\n\t}catch(e){\r\n\t\tconsole.warn(e);\r\n\r\n\t\t//Also delete locally, as it won't be listened to, and on the server it probably is already unregistered\r\n\t}\r\n\tregisteredTypes.delete(type);\r\n}\r\n\r\n\r\nasync function getMethods(invoker:Invoker):Promise<string[]>{\r\n\tconst getter=invoker[RpcObjectGetMethods];\r\n\tif(getter) return await getter.call(invoker);\r\n\r\n\treturn Object.getOwnPropertyNames(invoker).filter(key=>typeof invoker[key]==\"function\");\r\n}\r\n\r\nexport async function invoke(invoker:Invoker,type:string,method:string | null,...args:any[]):Promise<any>{\r\n\tif(method!=null){\r\n\t\tlet func=invoker[method];\r\n\t\tif(func==null){\r\n\t\t\tlet ignoreCase=(await getMethods(invoker)).find(s=>s.toLowerCase()==method.toLowerCase());\r\n\t\t\tif(ignoreCase!=null) func=invoker[ignoreCase];\r\n\t\t}\r\n\t\t//Try finding the same method on a default object, if it is reference equals, then it is a builtin function, that should not be available via RPC\r\n\t\tconst reference=({})[method];\r\n\r\n\t\tif(func==null||func===reference)throw RpcMethodNotFoundError.new(type,method);\r\n\t\ttry{\r\n\t\t\treturn await (({\r\n\t\t\t\tasync $RPC_MARKER_BEGIN$(){\r\n\t\t\t\t\treturn await func.call(invoker,...args);\r\n\t\t\t\t}\r\n\t\t\t})[\"$RPC_MARKER_BEGIN$\"])();\r\n\t\t\t//return await rpcMarkInternal(async()=>await func.call(invoker,...args));\r\n\t\t}catch(e){\r\n\t\t\tthrow RpcError.wrapAndFreeze(e as Error);\r\n\t\t}\r\n\t}\r\n\r\n\tconst meta=args.length==0?null:args[0];\r\n\tswitch(meta){\r\n\t\tcase \"M\":\r\n\t\t\treturn getMethods(invoker);\r\n\t\tdefault:\r\n\t\t\tthrow RpcMetaMethodNotFoundError.new(type,meta);\r\n\t}\r\n}","import {FunctionCallContext} from \"./FunctionCallContext.js\";\r\nimport {RpcError} from \"../RpcError.js\";\r\nimport {freeDynamic} from \"../data/DynamicData.js\";\r\nimport {RpcName} from \"../../connection/RpcName\";\r\nimport {Rpc} from \"../../rpc\";\r\n\r\ntype Action<T>=(t:T)=>void;\r\n\r\nexport class PendingCall<T=unknown> implements Promise<T>{\r\n\tpublic readonly [Symbol.toStringTag]:string=\"PendingCall\";\r\n\tpublic finished=false;\r\n\tpublic readonly promise:Promise<T>;\r\n\r\n\tconstructor(skip:number,dispose:unknown[]){\r\n\t\ttry{\r\n\t\t\t// noinspection ExceptionCaughtLocallyJS\r\n\t\t\tthrow new Error();\r\n\t\t}catch(stackSource){\r\n\t\t\tthis.promise=new Promise((resolve,reject)=>{\r\n\t\t\t\tresolveCall.set(this,t=>{\r\n\t\t\t\t\tresolveCall.delete(this);\r\n\t\t\t\t\trejectCall.delete(this);\r\n\t\t\t\t\tthis.finished=true;\r\n\t\t\t\t\tresolve(t);\r\n\t\t\t\t\tfreeDynamic(dispose);\r\n\t\t\t\t});\r\n\t\t\t\trejectCall.set(this,e=>{\r\n\t\t\t\t\tresolveCall.delete(this);\r\n\t\t\t\t\trejectCall.delete(this);\r\n\t\t\t\t\tthis.finished=true;\r\n\t\t\t\t\treject(e instanceof RpcError?e.unfreeze(stackSource as any,skip):e);\r\n\t\t\t\t\tfreeDynamic(dispose);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tcatch<TResult=never>(onrejected?:((reason:any)=>(PromiseLike<TResult> | TResult)) | undefined | null):Promise<T | TResult>{\r\n\t\treturn this.promise.catch(onrejected);\r\n\t}\r\n\r\n\tfinally(onfinally?:(()=>void) | undefined | null):Promise<T>{\r\n\t\treturn this.promise.finally(onfinally);\r\n\t}\r\n\r\n\tthen<TResult1=T,TResult2=never>(onfulfilled?:((value:T)=>(PromiseLike<TResult1> | TResult1)) | undefined | null,onrejected?:((reason:any)=>(PromiseLike<TResult2> | TResult2)) | undefined | null):Promise<TResult1 | TResult2>{\r\n\t\treturn this.promise.then(onfulfilled,onrejected);\r\n\t}\r\n\r\n\tsendMessage(..._args:any[]):PendingCall<T>{//overridden by callFunction and callLocal\r\n\t\treturn this;\r\n\t}\r\n\r\n\taddMessageListener<Args extends any[]=any[]>(func:(...args:Args)=>void):PendingCall<T>{\r\n\t\treturn registerReceive(this,func as (...args:any[])=>void);\r\n\t}\r\n\r\n\tcancel(){\r\n\t}//overridden by callFunction and callLocal\r\n\t\r\n\tgetCaller():Promise<string>{\r\n\t\treturn Promise.resolve(Rpc.prettyName);\r\n\t}//overridden by callFunction and callLocal\r\n\r\n\t[Symbol.asyncIterator]():AsyncIterator<any[]>{\r\n\t\treturn getAsyncIterator(this);\r\n\t}\r\n}\r\n\r\nexport function getAsyncIterator(call:PendingCall | FunctionCallContext):AsyncIterator<unknown[]>{\r\n\tlet didReceive:IteratorResult<unknown[]>[]=[];\r\n\tlet waitReceive:((r:IteratorResult<unknown[]>)=>void)[]=[];\r\n\r\n\tcall.promise.catch(()=>{});\r\n\tcall.promise.finally(()=>{\r\n\t\tfor(let request of waitReceive) request({done:true,value:undefined});\r\n\t});\r\n\tcall.addMessageListener((...args)=>{\r\n\t\t(waitReceive.shift()??didReceive.push)({done:false,value:args});\r\n\t});\r\n\r\n\treturn {\r\n\t\tasync next():Promise<IteratorResult<unknown[]>>{\r\n\t\t\tif(call.finished) return {done:true,value:undefined};\r\n\t\t\treturn didReceive.shift()?? await new Promise(res=>waitReceive.push(res));\r\n\t\t},\r\n\t};\r\n}\r\n\r\nexport const resolveCall=new WeakMap<PendingCall,Action<any>>();\r\nexport const rejectCall=new WeakMap<PendingCall,Action<unknown>>();\r\nexport const pendingMap=new WeakMap<PendingCall | FunctionCallContext,(any[])[]>();\r\nexport const listenersMap=new WeakMap<PendingCall | FunctionCallContext,((...args:any[])=>void)[]>();\r\n\r\nexport function registerReceive<AnyCall extends PendingCall | FunctionCallContext>(call:AnyCall,func:(...args:any[])=>void){\r\n\tif(listenersMap.has(call)){\r\n\t\tlistenersMap.get(call)!.push(func);\r\n\t}else{\r\n\t\tlistenersMap.set(call,[func]);\r\n\t\tconst pendings=pendingMap.get(call)??[];\r\n\t\tfor(let pending of pendings){\r\n\t\t\ttry{\r\n\t\t\t\tfunc(...pending);\r\n\t\t\t}catch(e){\r\n\t\t\t\tconsole.warn(\"Error receiving pending: \",e);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn call;\r\n}\r\n\r\nexport function runReceiveMessage(call:PendingCall | FunctionCallContext,args:any[]){\r\n\tif(call.finished) return;\r\n\r\n\tif(listenersMap.has(call)){\r\n\t\tfor(let func of listenersMap.get(call)!){\r\n\t\t\ttry{\r\n\t\t\t\tfunc(...args);\r\n\t\t\t}catch(e){\r\n\t\t\t\tconsole.warn(\"Error receiving: \",e);\r\n\t\t\t}\r\n\t\t}\r\n\t}else if(pendingMap.has(call)){\r\n\t\tpendingMap.set(call,[...pendingMap.get(call)!,args]);\r\n\t}else{\r\n\t\tpendingMap.set(call,[args]);\r\n\t}\r\n}","import {invoke,registeredTypes} from \"../../internal/RegisteredTypes.js\";\r\nimport {getAsyncIterator,PendingCall,registerReceive,rejectCall,resolveCall,runReceiveMessage} from \"./PendingCall.js\";\r\nimport {DataOutput} from \"../data/DataOutput.js\";\r\nimport {PacketType,sendCall,sendRaw} from \"../../connection/Connection.js\";\r\nimport {_webSocket,isConnected} from \"../../connection/WebSocketConnection.js\";\r\nimport {RpcError} from \"../RpcError.js\";\r\nimport {RpcConnectionError} from \"../errors/PredefinedErrors.js\";\r\n\r\n\r\nlet currentContext:FunctionCallContext | null=null;\r\n\r\nexport function runWithContext<T>(func:()=>T,context:FunctionCallContext):T{\r\n\tconst previous:FunctionCallContext | null=currentContext;\r\n\tcurrentContext=context;\r\n\ttry{\r\n\t\treturn func();\r\n\t}finally{\r\n\t\tcurrentContext=previous;\r\n\t}\r\n}\r\n\r\nexport function getFunctionContext():FunctionCallContext{\r\n\tif(currentContext==null) throw new Error(\"FunctionCallContext not available\");\r\n\treturn currentContext;\r\n}\r\n\r\n\r\nlet nextId=0;\r\n\r\nexport function callRemoteFunction<T=unknown>(type:string | null,method:string | null,...args:any[]):PendingCall<T>{\r\n\tif(type!=null){\r\n\t\tconst local=registeredTypes.get(type);\r\n\t\tif(local) return callLocalFunction<T>(invoke.bind(null,local,type,method,...args),type,method,args,3);\r\n\t}\r\n\r\n\tconst already:unknown[]=[];\r\n\tconst call=new PendingCall<T>(2,already);\r\n\r\n\tconst buff=new DataOutput();\r\n\tconst callId=nextId++;\r\n\ttry{\r\n\t\tbuff.writeByte(PacketType.FunctionCall);\r\n\t\tbuff.writeLength(callId);\r\n\t\tbuff.writeString(type);\r\n\t\tbuff.writeString(method);\r\n\t\tbuff.writeArray(args,d=>buff.writeDynamic(d,already));\r\n\t}catch(e){\r\n\t\trejectCall.get(call)?.(e);\r\n\t\treturn call;\r\n\t}\r\n\r\n\tif(!(isConnected||(type==null&&_webSocket!=null))){\r\n\t\trejectCall.get(call)?.(RpcConnectionError.new(\"Not connected\"));\r\n\t\treturn call;\r\n\t}\r\n\tcall.sendMessage=(...msgArgs)=>{\r\n\t\tif(call.finished) return call;\r\n\t\tconst msg=new DataOutput();\r\n\t\tmsg.writeByte(PacketType.MessageToExecutor);\r\n\t\tmsg.writeLength(callId);\r\n\t\tconst list:unknown[]=[];\r\n\t\tmsg.writeArray(msgArgs,d=>msg.writeDynamic(d,list));\r\n\t\talready.push(...list);\r\n\r\n\t\tsendRaw(msg);\r\n\t\treturn call;\r\n\t};\r\n\tcall.cancel=()=>{\r\n\t\tif(call.finished) return;\r\n\t\tconst msg=new DataOutput();\r\n\t\tmsg.writeByte(PacketType.FunctionCancel);\r\n\t\tmsg.writeLength(callId);\r\n\r\n\t\tsendRaw(msg);\r\n\t};\r\n\tcall.getCaller=()=>callRemoteFunction(null,\"c\",callId);\r\n\r\n\tsendCall(callId,call,buff);\r\n\r\n\treturn call;\r\n}\r\n\r\n\r\nexport function callLocal<T>(func:()=>(Promise<T> | T)):PendingCall<T>{\r\n\treturn callLocalFunction(func,null,null,null,3);\r\n}\r\n\r\nfunction callLocalFunction<T>(func:()=>(Promise<T> | T),type:string | null,method:string | null,args:any[] | null,skip:number){\r\n\tconst pending=new PendingCall<T>(skip,[]);\r\n\r\n\tconst controller=new AbortController();\r\n\tconst context:FunctionCallContext={\r\n\t\ttype,\r\n\t\tmethod,\r\n\t\tsendMessage:(...sending)=>{\r\n\t\t\tpending.finished||runReceiveMessage(pending,sending);\r\n\t\t\treturn context;\r\n\t\t},\r\n\t\tget finished(){\r\n\t\t\treturn pending.finished\r\n\t\t},\r\n\t\tpromise:pending,\r\n\t\taddMessageListener:(func:(...args:any[])=>void)=>registerReceive(context,func),\r\n\t\tcancelToken:controller.signal,\r\n\t\tcancelSelf:()=>controller.abort(),\r\n\t\t[Symbol.asyncIterator]:()=>getAsyncIterator(context),\r\n\t};\r\n\tpending.sendMessage=(...received)=>{\r\n\t\tpending.finished||runReceiveMessage(context,received);\r\n\t\treturn pending;\r\n\t};\r\n\tpending.cancel=()=>pending.finished||context.cancelSelf();\r\n\r\n\t// noinspection JSIgnoredPromiseFromCall\r\n\tinvokeForPromise(func,context,resolveCall.get(pending),rejectCall.get(pending),type,method,args);\r\n\r\n\treturn pending;\r\n}\r\n\r\nexport async function invokeForPromise<T>(func:()=>T,context:FunctionCallContext,resolve:((t:T)=>void) | undefined,reject:((e:RpcError)=>void) | undefined,\r\n\t\t\t\t\t\t\t\t\t\t  type:string | null,method:string | null,args:any[] | null){\r\n\ttry{\r\n\t\tlet result:Promise<T>;\r\n\t\tconst previous:FunctionCallContext | null=currentContext;\r\n\t\tcurrentContext=context;\r\n\t\ttry{\r\n\t\t\tresult=await (({\r\n\t\t\t\tasync $RPC_MARKER_BEGIN$(){\r\n\t\t\t\t\treturn await func() as any;\r\n\t\t\t\t}\r\n\t\t\t})[\"$RPC_MARKER_BEGIN$\"])();\r\n\t\t}finally{\r\n\t\t\tcurrentContext=previous;\r\n\t\t}\r\n\t\tresolve?.(await result);\r\n\t}catch(e){\r\n\t\treject?.(RpcError\r\n\t\t\t.wrapAndFreeze(e as Error)\r\n\t\t\t.append(type,method,args));\r\n\t}\r\n}\r\n\r\nexport interface FunctionCallContext{\r\n\treadonly type:string | null\r\n\treadonly method:string | null\r\n\treadonly finished:boolean\r\n\treadonly promise:Promise<unknown>\r\n\r\n\tsendMessage(...args:any[]):FunctionCallContext\r\n\r\n\taddMessageListener(func:(...args:any[])=>void):FunctionCallContext\r\n\r\n\tcancelToken:AbortSignal\r\n\r\n\tcancelSelf():void\r\n\r\n\t[Symbol.asyncIterator]():AsyncIterator<any[]>;\r\n}\r\n\r\n\r\nexport interface Types{\r\n\tY:{\r\n\t}\r\n}","import {RpcId} from \"../connection/RpcId.js\";\r\nimport {callRemoteFunction} from \"./functions/FunctionCallContext.js\";\r\nimport {PendingCall} from \"./functions/PendingCall.js\";\r\nimport {registeredFunctions} from \"../internal/RegisteredTypes.js\";\r\n\r\n\r\ntype ParamsOrEmpty<T>=T extends (...args: infer Params)=>any?Params: unknown extends T?any[]: [];\r\ntype ReturnTypeFromAnything<T>=T extends (...args: any)=>infer ReturnType?ReturnType: T;\r\ntype UnwrapPromise<T>=T extends Promise<infer PromiseType>?PromiseType: T;\r\n\r\nexport type RpcFunction<FuncOrReturnType>=InstanceType<typeof RpcFunction<FuncOrReturnType>>;\r\n\r\nexport const RpcFunction=class RpcFunction<FuncOrReturnType>\r\n\textends (function Extendable(func: Function){return Object.setPrototypeOf(func,new.target.prototype);} as any as {\r\n\t\tnew<FuncOrReturnType=unknown>(func: Function): {\r\n\t\t\t//Complex call signature from generic, to allow easier definition later on\r\n\t\t\t(...args: ParamsOrEmpty<FuncOrReturnType>): PendingCall<UnwrapPromise<ReturnTypeFromAnything<FuncOrReturnType>>>;\r\n\t\t}\r\n\t})<FuncOrReturnType>{\r\n\r\n\tconstructor(\r\n\t\tpublic readonly type: string,\r\n\t\tpublic readonly method: string,\r\n\t){super(callRemoteFunction.bind(null,type,method));}\r\n\r\n\r\n\ttoString(){\r\n\t\treturn `rpc (...params) => ${this.type??\"null\"}.${this.method}(...params)`;\r\n\t}\r\n};\r\n\r\nlet nextId: number=Date.now();\r\nconst functionCache=new WeakMap<((...args: any)=>any),string>();\r\n\r\nexport function registerFunction<T extends ((...args: any)=>any)>(func: T): RpcFunction<T>{\r\n\tif(func instanceof RpcFunction) return func;\r\n\tconst already=functionCache.get(func);\r\n\tif(already!=null)return new RpcFunction(\"$\"+RpcId,already);\r\n\tconst id=(nextId++).toString(16);\r\n\r\n\tregisteredFunctions[id]=func;\r\n\tfunctionCache.set(func,id);\r\n\r\n\tconst type=\"$\"+RpcId;\r\n\treturn new RpcFunction(type,id);\r\n}\r\n\r\nexport function unregisterFunction(func: RpcFunction<any>){\r\n\tconst type=\"$\"+RpcId;\r\n\tif(func.type!=type) throw new Error(\"Can't unregister RemoteFunction, that was not registered locally\");\r\n\r\n\tdelete registeredFunctions[func.method];\r\n\tfunctionCache.delete(func);\r\n}","import {RpcFunction} from \"./RpcFunction.js\";\r\nimport {callRemoteFunction} from \"./functions/FunctionCallContext.js\";\r\n\r\nexport const RpcObjectType=Symbol(\"RpcObjectType\");\r\nexport const RpcObjectExists=Symbol(\"RpcObjectExists\");\r\nexport const RpcObjectGetMethods=Symbol(\"RpcObjectGetMethods\");\r\nexport type RpcObject<T=RpcObjectTemplate,Type=string>={\r\n\t[x in keyof T]:\r\n\tx extends \"then\" | symbol?\r\n\t\tT[x]:\r\n\t\tT[x] extends (...args: any[])=>unknown?\r\n\t\t\tRpcFunction<T[x]>:\r\n\t\t\tRpcFunction<any>;\r\n} & {\r\n\t[RpcObjectType]: Type,\r\n\t[RpcObjectExists]: ()=>Promise<boolean>\r\n\t[RpcObjectGetMethods]: ()=>Promise<string[]>\r\n};\r\n\r\nexport type RpcObjectTemplate={\r\n\t[s: string]: (...args: any[])=>unknown\r\n}\r\n\r\n\r\nexport function createRemoteObject<\r\n\tT extends object=RpcObjectTemplate,\r\n\tTypeString extends string=string\r\n>(\r\n\ttype: TypeString,\r\n\ttarget: T=new class RpcObject{[RpcObjectType]=type} as T,\r\n): RpcObject<T,TypeString>{\r\n\t\r\n\tconst cache=new Map<string,RpcFunction<any>>();\r\n\t\r\n\t\r\n\treturn new Proxy<RpcObject<T,TypeString>>(<any>target,{\r\n\t\tget(_: never,p: string | symbol): any{\r\n\t\t\tif(p==RpcObjectType) return type;\r\n\t\t\tif(p==RpcObjectExists) return ()=>callRemoteFunction(null,\"E\",type);\r\n\t\t\tif(p==RpcObjectGetMethods) return ()=>callRemoteFunction(type,null,\"M\");\r\n\t\t\tif(typeof p!=\"string\"||\r\n\t\t\t\tp==\"then\"//otherwise every RemoteObject would be thenable => would interfere with async await\r\n\t\t\t) return (<any>target)[p];\r\n\t\t\tif(cache.has(p)) return cache.get(p);\r\n\r\n\t\t\tconst func=new RpcFunction(\r\n\t\t\t\ttype,\r\n\t\t\t\tp);\r\n\t\t\tcache.set(p,func);\r\n\t\t\treturn func;\r\n\t\t},\r\n\t\tconstruct(target: any,argArray: any[]): object{\r\n\t\t\treturn new target(...argArray);\r\n\t\t},\r\n\t\thas(_:never,p: string | symbol): boolean{\r\n\t\t\treturn p==RpcObjectType||p==RpcObjectGetMethods||p==RpcObjectExists||p in target;\r\n\t\t},\r\n\t});\r\n}\r\n\r\n\r\nexport const RPC_ROOT=new Proxy({},{\r\n\tget:(_,prop)=>typeof prop==\"string\"?createRemoteObject(prop):undefined,\r\n\thas:(_,prop)=>typeof prop==\"string\"&&prop!=\"then\",\r\n}) as Record<string,RpcObject>;","import {DataInput} from \"./DataInput.js\";\r\nimport {createRemoteObject,RpcObjectType} from \"../RpcObject.js\";\r\nimport {DataOutput} from \"./DataOutput.js\";\r\nimport {registerFunction,RpcFunction,unregisterFunction} from \"../RpcFunction.js\";\r\n\r\nexport const writeRegistry: [id: string,check: (d: unknown)=>boolean,write: (data: DataOutput,o: unknown,already: unknown[])=>void][]=[];\r\nexport const readRegistry=new Map<string,(data: DataInput,already: unknown[])=>unknown>();\r\n\r\nexport function readDynamic(data: DataInput,already: unknown[]){\r\n\tlet objectId=data.readLength();\r\n\r\n\tif(objectId<0){\r\n\t\tobjectId= -objectId;\r\n\t\tswitch(objectId%4){\r\n\t\t\tcase 0:\r\n\t\t\t\treturn already[objectId/4];\r\n\t\t\tcase 1:\r\n\t\t\t\treturn new TextDecoder().decode(data.readBuffer((objectId-1)/4));\r\n\t\t\tcase 2:{\r\n\t\t\t\tconst o: Record<string,any>={};\r\n\t\t\t\talready.push(o);\r\n\t\t\t\tfor(let i=0; i<(objectId-2)/4; i++){\r\n\t\t\t\t\tconst key=data.readString();\r\n\t\t\t\t\to[key!]=readDynamic(data,already);\r\n\t\t\t\t}\r\n\t\t\t\treturn o;\r\n\t\t\t}\r\n\t\t\tcase 3:{\r\n\t\t\t\tconst o=new Array((objectId-3)/4);\r\n\t\t\t\talready.push(o);\r\n\t\t\t\tfor(let i=0; i<o.length; i++) o[i]=readDynamic(data,already);\r\n\t\t\t\treturn o;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthrow new Error(\"Unreachable code reached\");\r\n\t}else if(objectId>=128){\r\n\t\tconst type=new TextDecoder().decode(data.readBuffer(objectId-128));\r\n\t\tconst registryEntry=readRegistry.get(type);\r\n\t\tif(registryEntry)\r\n\t\t\treturn registryEntry(data,already);\r\n\t\tthrow new Error(\"Unknown data type: \"+type);\r\n\t}else{\r\n\t\tswitch(String.fromCodePoint(objectId)){\r\n\t\t\tcase 'n':\r\n\t\t\t\treturn null;\r\n\t\t\tcase 't':\r\n\t\t\t\treturn true;\r\n\t\t\tcase 'f':\r\n\t\t\t\treturn false;\r\n\t\t\tcase 'i':\r\n\t\t\t\treturn data.readInt();\r\n\t\t\tcase 'd':\r\n\t\t\t\treturn data.readDouble();\r\n\t\t\tcase 'l':\r\n\t\t\t\treturn data.readLong();\r\n\t\t\tcase 'b':\r\n\t\t\t\treturn data.readBuffer(data.readLength());\r\n\t\t\tcase 'D':\r\n\t\t\t\treturn new Date(Number(data.readLong()));\r\n\t\t\tcase 'R':{\r\n\t\t\t\tconst pattern=data.readString();\r\n\t\t\t\tconst flags=data.readByte();\r\n\r\n\t\t\t\treturn new RegExp(pattern!,\"g\"+\r\n\t\t\t\t\t((flags&1)?\"i\": \"\")+\r\n\t\t\t\t\t((flags&2)?\"m\": \"\"),\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tcase 'E':\r\n\t\t\t\treturn data.readError();\r\n\t\t\tcase 'O':\r\n\t\t\t\tconst objectType=data.readString();\r\n\t\t\t\tif(objectType==null) throw new Error(\"Type can't be null\");\r\n\t\t\t\treturn createRemoteObject(objectType);\r\n\t\t\tcase 'F':\r\n\t\t\t\tconst type=data.readString();\r\n\t\t\t\tif(type==null) throw new Error(\"Type can't be null\");\r\n\t\t\t\tconst method=data.readString();\r\n\t\t\t\tif(method==null) throw new Error(\"Method can't be null\");\r\n\t\t\t\tconst func=new RpcFunction(type,method);\r\n\t\t\t\talready.push(func);\r\n\t\t\t\treturn func;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(\"Unknown data type number: \"+objectId);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function writeDynamic(output: DataOutput,d: unknown,already: unknown[]){\r\n\tif(d==null) output.writeLength('n'.charCodeAt(0));\r\n\telse if(d===true) output.writeLength('t'.charCodeAt(0));\r\n\telse if(d===false) output.writeLength('f'.charCodeAt(0));\r\n\telse if(typeof d==\"number\"&&(d|0)===d){\r\n\t\toutput.writeLength('i'.charCodeAt(0));\r\n\t\toutput.writeInt(d);\r\n\t}else if(typeof d==\"number\"){\r\n\t\toutput.writeLength('d'.charCodeAt(0));\r\n\t\toutput.writeDouble(d);\r\n\t}else if(typeof d==\"bigint\"){\r\n\t\toutput.writeLength('l'.charCodeAt(0));\r\n\t\toutput.writeLong(d);\r\n\t}else if(d instanceof Uint8Array){\r\n\t\toutput.writeLength('b'.charCodeAt(0));\r\n\t\toutput.writeLength(d.length);\r\n\t\toutput.writeBuffer(d);\r\n\t}else if(d instanceof Date){\r\n\t\toutput.writeLength('D'.charCodeAt(0));\r\n\t\toutput.writeLong(+d);\r\n\t}else if(d instanceof RegExp){\r\n\t\toutput.writeLength('R'.charCodeAt(0));\r\n\t\toutput.writeString(d.source);\r\n\t\tconst flags=d.flags;\r\n\t\toutput.writeByte(\r\n\t\t\t(flags.includes(\"i\")?1: 0)||\r\n\t\t\t(flags.includes(\"m\")?2: 0),\r\n\t\t);\r\n\t}else if(d instanceof Error){\r\n\t\toutput.writeLength('E'.charCodeAt(0));\r\n\t\toutput.writeError(d);\r\n\t}else if(typeof d===\"object\"&&RpcObjectType in d){//RpcObject\r\n\t\toutput.writeLength('O'.charCodeAt(0));\r\n\t\toutput.writeString((d as any)[RpcObjectType]);\r\n\t}else if(typeof d===\"function\"){//RpcFunction\r\n\t\talready.push(d);\r\n\t\toutput.writeLength('F'.charCodeAt(0));\r\n\t\t\r\n\t\tlet rpcFunc:RpcFunction<any>;\r\n\t\tif(d instanceof RpcFunction)rpcFunc=d;\r\n\t\telse{\r\n\t\t\trpcFunc=registerFunction(d as any);\r\n\t\t\tonFree.set(d,()=>unregisterFunction(rpcFunc));\r\n\t\t}\r\n\r\n\t\toutput.writeString(rpcFunc.type);\r\n\t\toutput.writeString(rpcFunc.method);\r\n\t\t\r\n\t}else if(already.includes(d)){\r\n\t\toutput.writeLength(-(already.indexOf(d)*4/* +0 */));\r\n\t}else if(typeof d===\"string\"){\r\n\t\tconst buffer=new TextEncoder().encode(d);\r\n\t\toutput.writeLength(-(buffer.length*4+1));\r\n\t\toutput.writeBytes(buffer);\r\n\t} else if(Array.isArray(d)){\r\n\t\talready.push(d);\r\n\t\toutput.writeLength(-(d.length*4+3));\r\n\t\tfor(let element of d) writeDynamic(output,element,already);\r\n\t}else{\r\n\t\tfor(let [id,check,write] of writeRegistry){\r\n\t\t\tif(!check(d)) continue;\r\n\t\t\tconst idBytes=new TextEncoder().encode(id);\r\n\t\t\toutput.writeLength(idBytes.length+128);\r\n\t\t\toutput.writeBytes(idBytes);\r\n\t\t\twrite(output,d,already);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif(typeof d===\"object\"){\r\n\t\t\talready.push(d);\r\n\t\t\tconst entries=Object.entries(d);\r\n\t\t\toutput.writeLength(-(entries.length*4+2));\r\n\t\t\tfor(let [key,value] of entries){\r\n\t\t\t\toutput.writeString(key);\r\n\t\t\t\twriteDynamic(output,value,already);\r\n\t\t\t}\r\n\t\t}else throw new Error(\"Unknown type for \"+d);\r\n\t}\r\n}\r\n\r\nconst onFree=new WeakMap<any,VoidFunction>();\r\nexport function freeDynamic(already:unknown[]){\r\n\tfor(let element of already)\r\n\t\tonFree.get(element)?.();\r\n}","import {RpcError} from \"../RpcError.js\";\r\nimport {writeDynamic} from \"./DynamicData.js\";\r\n\r\nexport class DataOutput{\r\n\tprivate _buf:Uint8Array;\r\n\tprivate _data:DataView;\r\n\tprivate _count:number=0;\r\n\r\n\tconstructor(size:number | Uint8Array=32){\r\n\t\tthis._buf=typeof size===\"number\"?new Uint8Array(size):size;\r\n\t\tthis._data=new DataView(this._buf.buffer);\r\n\t}\r\n\r\n\tprivate ensureCapacity(additional:number){\r\n\t\tadditional+=this._count;\r\n\t\tif(additional>this._buf.byteLength){\r\n\t\t\tlet replacement=new Uint8Array(Math.max(this._buf.byteLength*2,additional));\r\n\t\t\tthis._data=new DataView(replacement.buffer);\r\n\r\n\t\t\treplacement.set(this._buf);\r\n\t\t\tthis._buf=replacement;\r\n\t\t}\r\n\t}\r\n\r\n\twriteByte(b:number):void{\r\n\t\tthis.ensureCapacity(1);\r\n\t\tthis._buf[this._count]=b;\r\n\t\tthis._count++;\r\n\t}\r\n\r\n\twriteBytes(b:ArrayLike<number>):void{\r\n\t\tthis.ensureCapacity(b.length);\r\n\t\tthis._buf.set(b,this._count);\r\n\t\tthis._count+=b.length;\r\n\t}\r\n\r\n\twriteBuffer(buf:Uint8Array):void{\r\n\t\tthis.writeBytes(buf);\r\n\t}\r\n\r\n\twriteBoolean(b:boolean):void{\r\n\t\tthis.writeByte(b?1:0);\r\n\t}\r\n\r\n\twriteNullBoolean(b:boolean | null):void{\r\n\t\tthis.writeByte(b==null?2:b?1:0);\r\n\t}\r\n\r\n\twriteShort(n:number):void{\r\n\t\tthis.ensureCapacity(2);\r\n\t\tthis._data.setInt16(this._count,n);\r\n\t\tthis._count+=2;\r\n\t}\r\n\r\n\twriteChar(c:string):void{\r\n\t\tthis.writeShort(c.charCodeAt(0));\r\n\t}\r\n\r\n\twriteInt(n:number):void{\r\n\t\tthis.ensureCapacity(4);\r\n\t\tthis._data.setInt32(this._count,n);\r\n\t\tthis._count+=4;\r\n\t}\r\n\r\n\twriteLong(n:bigint | number):void{\r\n\t\tif(typeof n===\"number\"){\r\n\t\t\tthis.writeInt(n/(2**32));\r\n\t\t\tthis.writeInt(n%(2**32));\r\n\t\t}else{\r\n\t\t\tthis.writeInt(Number(n/BigInt(2**32)));\r\n\t\t\tthis.writeInt(Number(n%BigInt(2**32)));\r\n\t\t}\r\n\t}\r\n\r\n\twriteFloat(n:number):void{\r\n\t\tthis.ensureCapacity(4);\r\n\t\tthis._data.setFloat32(this._count,n);\r\n\t\tthis._count+=4;\r\n\t}\r\n\r\n\twriteDouble(n:number):void{\r\n\t\tthis.ensureCapacity(8);\r\n\t\tthis._data.setFloat64(this._count,n);\r\n\t\tthis._count+=8;\r\n\t}\r\n\r\n\twriteString(s:string | null){\r\n\t\tif(s==null){\r\n\t\t\tthis.writeLength(-1);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet array=new TextEncoder().encode(s);\r\n\t\tthis.writeLength(array.length);\r\n\t\tthis.writeBytes(array);\r\n\t}\r\n\r\n\twriteLength(i:number){\r\n\t\tlet u=(i<0?~i:i)>>>0;// \">>>0\" : convert to unsigned\r\n\t\twhile(u>=0x80){\r\n\t\t\tthis.writeByte(u|0x80);\r\n\t\t\tu>>=7;\r\n\t\t}\r\n\t\tif(i<0){\r\n\t\t\tthis.writeByte(u|0x80);\r\n\t\t\tthis.writeByte(0);\r\n\t\t}else{\r\n\t\t\tthis.writeByte(u);\r\n\t\t}\r\n\t}\r\n\r\n\twriteByteArray(arr:ArrayLike<number> | null){\r\n\t\tif(!arr) this.writeLength(-1);\r\n\t\telse{\r\n\t\t\tthis.writeLength(arr.length);\r\n\t\t\tthis.writeBytes(arr);\r\n\t\t}\r\n\t}\r\n\r\n\twriteArray<T>(arr:ArrayLike<T> | null,writeFunction:(t:T)=>void){\r\n\t\tif(!arr) this.writeLength(-1);\r\n\t\telse{\r\n\t\t\tthis.writeLength(arr.length);\r\n\t\t\tfor(let i=0; i<arr.length; i++)\r\n\t\t\t\twriteFunction.call(this,arr[i]!);\r\n\t\t}\r\n\t}\r\n\r\n\ttoBuffer(from=0):Uint8Array{\r\n\t\treturn this._buf.slice(from,this._count-from);\r\n\t}\r\n\r\n\twriteError(error:Error){\r\n\t\ttry{// noinspection ExceptionCaughtLocallyJS\r\n\t\t\tthrow RpcError.wrapAndFreeze(error)\r\n\t\t}catch(e){\r\n\t\t\t(e as RpcError).write(this);\r\n\t\t}\r\n\t}\r\n\r\n\twriteDynamic(value:any,already:unknown[]=[]){\r\n\t\twriteDynamic(this,value,already);\r\n\t}\r\n}\r\n","// noinspection ExceptionCaughtLocallyJS\r\n\r\nimport {_webSocket} from \"./WebSocketConnection.js\";\r\nimport {DataOutput} from \"../types/data/DataOutput.js\";\r\nimport {DataInput} from \"../types/data/DataInput.js\";\r\nimport {\r\n\tgetAsyncIterator,\r\n\tPendingCall,\r\n\tregisterReceive,\r\n\trejectCall,\r\n\tresolveCall,\r\n\trunReceiveMessage\r\n} from \"../types/functions/PendingCall.js\";\r\nimport {invoke,registeredTypes} from \"../internal/RegisteredTypes.js\";\r\nimport {FunctionCallContext,invokeForPromise} from \"../types/functions/FunctionCallContext.js\";\r\nimport {freeDynamic} from \"../types/data/DynamicData.js\";\r\nimport {Rpc,RpcConnectionError,RpcTypeNotFoundError} from \"../rpc.js\";\r\n\r\n\r\nconst activeRequests=new Map<number,PendingCall>();\r\nconst currentlyExecuting=new Map<number,FunctionCallContext>();\r\n\r\nexport function disposeConnection(e:Error){\r\n\tfor(let pending of activeRequests.values()) rejectCall.get(pending)?.(e);\r\n\tactiveRequests.clear();\r\n\r\n\tfor(let ctx of currentlyExecuting.values()) ctx.cancelSelf();\r\n}\r\n\r\nexport function sendRaw(buff:DataOutput){\r\n\tif(_webSocket==null) throw RpcConnectionError.new(\"Not connected\");\r\n\t_webSocket.send(buff.toBuffer());\r\n}\r\n\r\nexport function sendCall(callId:number,call:PendingCall,buff:DataOutput){\r\n\tactiveRequests.set(callId,call);\r\n\ttry{\r\n\t\tsendRaw(buff);\r\n\t}catch(e){\r\n\t\trejectCall.get(call)?.(e);\r\n\t}\r\n}\r\n\r\nexport enum PacketType{\r\n\tFunctionCall=0,\r\n\tFunctionSuccess=1,\r\n\tFunctionError=2,\r\n\tFunctionCancel=3,\r\n\tMessageToExecutor=4,\r\n\tMessageToCaller=5,\r\n}\r\n\r\nexport async function receiveRpc(data:DataInput){\r\n\ttry{\r\n\t\tconst packetType=data.readByte() as PacketType;\r\n\r\n\t\tswitch(packetType){\r\n\t\t\tcase PacketType.FunctionCall:{\r\n\t\t\t\tconst callId=data.readLength();\r\n\r\n\r\n\t\t\t\tconst already:unknown[]=[];\r\n\r\n\t\t\t\tlet finished:boolean=false;\r\n\t\t\t\tlet resolve:(t:unknown)=>void=null!;\r\n\t\t\t\tlet reject:(e:Error)=>void=null!;\r\n\r\n\t\t\t\tconst promise=new Promise((res,rej)=>{\r\n\t\t\t\t\tresolve=t=>{\r\n\t\t\t\t\t\tres(t);\r\n\t\t\t\t\t\tfinished=true;\r\n\r\n\t\t\t\t\t\tconst buff=new DataOutput();\r\n\t\t\t\t\t\tbuff.writeByte(PacketType.FunctionSuccess);\r\n\t\t\t\t\t\tbuff.writeLength(callId);\r\n\t\t\t\t\t\tbuff.writeDynamic(t);\r\n\t\t\t\t\t\tsendRaw(buff);\r\n\t\t\t\t\t\tcurrentlyExecuting.delete(callId);\r\n\r\n\t\t\t\t\t\tfreeDynamic(already);\r\n\t\t\t\t\t};\r\n\t\t\t\t\treject=e=>{\r\n\t\t\t\t\t\trej(e);\r\n\t\t\t\t\t\tfinished=true;\r\n\r\n\t\t\t\t\t\tconst buff=new DataOutput();\r\n\t\t\t\t\t\tbuff.writeByte(PacketType.FunctionError);\r\n\t\t\t\t\t\tbuff.writeLength(callId);\r\n\t\t\t\t\t\tbuff.writeError(e);\r\n\t\t\t\t\t\tsendRaw(buff);\r\n\t\t\t\t\t\tcurrentlyExecuting.delete(callId);\r\n\r\n\t\t\t\t\t\tfreeDynamic(already);\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tpromise.catch(()=>{\r\n\t\t\t\t});//Prevent uncaught error warning\r\n\r\n\r\n\t\t\t\ttry{\r\n\t\t\t\t\tconst type=data.readString();\r\n\r\n\t\t\t\t\tif(type==null)\r\n\t\t\t\t\t\tthrow RpcTypeNotFoundError.new(null);\r\n\t\t\t\t\tconst local=registeredTypes.get(type);\r\n\t\t\t\t\tif(!local)\r\n\t\t\t\t\t\tthrow RpcTypeNotFoundError.new(type);\r\n\r\n\t\t\t\t\tconst method=data.readString();\r\n\r\n\t\t\t\t\tconst args=data.readArray(()=>data.readDynamic(already))??[];\r\n\r\n\r\n\t\t\t\t\tconst controller=new AbortController();\r\n\t\t\t\t\tconst context:FunctionCallContext={\r\n\t\t\t\t\t\ttype,\r\n\t\t\t\t\t\tmethod,\r\n\t\t\t\t\t\tget finished(){\r\n\t\t\t\t\t\t\treturn finished;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tpromise,\r\n\t\t\t\t\t\tsendMessage(...sending){\r\n\t\t\t\t\t\t\tif(finished) return context;\r\n\t\t\t\t\t\t\tconst msg=new DataOutput();\r\n\t\t\t\t\t\t\tmsg.writeByte(PacketType.MessageToCaller);\r\n\t\t\t\t\t\t\tmsg.writeLength(callId);\r\n\t\t\t\t\t\t\tconst list:unknown[]=[];\r\n\t\t\t\t\t\t\tmsg.writeArray(sending,d=>msg.writeDynamic(d,list));\r\n\t\t\t\t\t\t\talready.push(...list);\r\n\r\n\t\t\t\t\t\t\tsendRaw(msg);\r\n\t\t\t\t\t\t\treturn context;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\taddMessageListener(func:(...args:any[])=>void){\r\n\t\t\t\t\t\t\tregisterReceive(context,func);\r\n\t\t\t\t\t\t\treturn context;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tcancelToken:controller.signal,\r\n\t\t\t\t\t\tcancelSelf:()=>controller.abort(),\r\n\t\t\t\t\t\t[Symbol.asyncIterator]:()=>getAsyncIterator(context),\r\n\t\t\t\t\t};\r\n\t\t\t\t\tcurrentlyExecuting.set(callId,context);\r\n\r\n\r\n\t\t\t\t\tawait invokeForPromise(invoke.bind(null,local,type,method,...args),context,resolve,reject,type,method,args);\r\n\t\t\t\t}catch(e){\r\n\t\t\t\t\treject(e as Error);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase PacketType.FunctionSuccess:{\r\n\t\t\t\tconst callId=data.readLength();\r\n\r\n\t\t\t\tconst pending=activeRequests.get(callId);\r\n\t\t\t\tif(pending==null){\r\n\t\t\t\t\tconsole.warn(`${Rpc.prettyName} has no activeRequest with id: ${callId}`);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\ttry{\r\n\t\t\t\t\tresolveCall.get(pending)?.(data.readDynamic());\r\n\t\t\t\t}catch(e){\r\n\t\t\t\t\trejectCall.get(pending)?.(e);\r\n\t\t\t\t}finally{\r\n\t\t\t\t\tactiveRequests.delete(callId);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase PacketType.FunctionError:{\r\n\t\t\t\tconst callId=data.readLength();\r\n\r\n\t\t\t\tconst pending=activeRequests.get(callId);\r\n\t\t\t\tif(pending==null){\r\n\t\t\t\t\tconsole.warn(`${Rpc.prettyName} has no activeRequest with id: ${callId}`);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttry{\r\n\t\t\t\t\tthrow data.readError();\r\n\t\t\t\t}catch(e){\r\n\t\t\t\t\trejectCall.get(pending)?.(e);\r\n\t\t\t\t}finally{\r\n\t\t\t\t\tactiveRequests.delete(callId);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase PacketType.FunctionCancel:{\r\n\t\t\t\tconst callId=data.readLength();\r\n\t\t\t\tlet ctx=currentlyExecuting.get(callId);\r\n\t\t\t\tif(!ctx){\r\n\t\t\t\t\tconsole.warn(`${Rpc.prettyName} has no CurrentlyExecuting with id: ${callId}`);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tctx.cancelSelf();\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase PacketType.MessageToExecutor:{\r\n\t\t\t\tconst callId=data.readLength();\r\n\t\t\t\tlet ctx=currentlyExecuting.get(callId);\r\n\t\t\t\tif(!ctx){\r\n\t\t\t\t\tconsole.warn(`${Rpc.prettyName} has no CurrentlyExecuting with id: ${callId}`);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tconst already:unknown[]=[];\r\n\t\t\t\tconst args=data.readArray(()=>data.readDynamic(already))??[];\r\n\t\t\t\trunReceiveMessage(ctx,args);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase PacketType.MessageToCaller:{\r\n\t\t\t\tconst callId=data.readLength();\r\n\t\t\t\tlet pending=activeRequests.get(callId);\r\n\t\t\t\tif(!pending){\r\n\t\t\t\t\tconsole.warn(`${Rpc.prettyName} has no ActiveRequest with id: ${callId}`);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tconst already:unknown[]=[];\r\n\t\t\t\tconst args=data.readArray(()=>data.readDynamic(already))??[];\r\n\t\t\t\trunReceiveMessage(pending,args);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}catch(e){\r\n\t\tconsole.error(e);\r\n\t}\r\n}","import {RpcError} from \"../RpcError.js\";\r\nimport {readDynamic} from \"./DynamicData.js\";\r\n\r\n\r\nexport class DataInput{\r\n\tprivate readonly _buf: Uint8Array;\r\n\tprivate readonly _data: DataView;\r\n\tprivate _pos: number;\r\n\tprivate readonly _count: number;\r\n\r\n\tconstructor(buf: Uint8Array);\r\n\tconstructor(buf: Uint8Array,pos: number,length: number);\r\n\tconstructor(buf: Uint8Array,pos: number=0,length: number=buf.length){\r\n\t\tthis._buf=buf;\r\n\t\tthis._data=new DataView(buf.buffer);\r\n\t\tthis._pos=pos;\r\n\t\tthis._count=pos+length;\r\n\t}\r\n\r\n\treadFully(b: number[],off: number=0,len: number=b.length): void{\r\n\t\tlet pos=this._pos;\r\n\t\tconst available=this._count-pos;\r\n\r\n\t\tif(available<len) throw new RangeError(\"not enough bytes available to use readFully\");\r\n\r\n\t\tfor(let i=off; i<off+len; i++)\r\n\t\t\tb[i]=this._buf[pos++]!;\r\n\t\tthis._pos=pos;\r\n\t}\r\n\r\n\tskip(n: number): number{\r\n\t\tlet k=this.available();\r\n\t\tif(n<k) k=n<0?0: n;\r\n\t\tthis._pos+=k;\r\n\t\treturn k;\r\n\t}\r\n\r\n\tavailable(): number{\r\n\t\treturn this._count-this._pos;\r\n\t}\r\n\r\n\treadAll(): Uint8Array{\r\n\t\treturn this._buf.slice(this._pos,this._pos=this._count);\r\n\t}\r\n\r\n\treadBuffer(length: number): Uint8Array{\r\n\t\tif(length>this.available()) throw new RangeError();\r\n\t\treturn this._buf.slice(this._pos,this._pos+=length);\r\n\t}\r\n\r\n\treadByte(): number{\r\n\t\treturn this._data.getUint8(this._pos++);\r\n\t}\r\n\r\n\treadBoolean(): boolean{\r\n\t\treturn this.readByte()!=0;\r\n\t}\r\n\r\n\treadNullBoolean(): boolean | null{\r\n\t\tconst b=this.readByte();\r\n\t\treturn b<2?b==1: null;\r\n\t}\r\n\r\n\treadShort(): number{\r\n\t\tconst n=this._data.getInt16(this._pos);\r\n\t\tthis._pos+=2;\r\n\t\treturn n;\r\n\t}\r\n\r\n\treadUShort(): number{\r\n\t\tconst n=this._data.getUint16(this._pos);\r\n\t\tthis._pos+=2;\r\n\t\treturn n;\r\n\t}\r\n\r\n\treadChar(): string{\r\n\t\treturn String.fromCharCode(this.readUShort());\r\n\t}\r\n\r\n\treadInt(): number{\r\n\t\tconst n=this._data.getInt32(this._pos);\r\n\t\tthis._pos+=4;\r\n\t\treturn n;\r\n\t}\r\n\r\n\treadLong(): bigint{\r\n\t\treturn BigInt(this.readInt())*BigInt(2**32)+BigInt(this.readInt()>>>0);\r\n\t}\r\n\r\n\treadFloat(): number{\r\n\t\tconst n=this._data.getFloat32(this._pos);\r\n\t\tthis._pos+=4;\r\n\t\treturn n;\r\n\t}\r\n\r\n\treadDouble(): number{\r\n\t\tconst n=this._data.getFloat64(this._pos);\r\n\t\tthis._pos+=8;\r\n\t\treturn n;\r\n\t}\r\n\r\n\treadString(): string|null{\r\n\t\tlet length=this.readLength();\r\n\t\tif(length== -1) return null;\r\n\t\treturn new TextDecoder().decode(this.readBuffer(length));\r\n\t}\r\n\r\n\treadLength(): number{\r\n\t\tlet result=0;\r\n\t\tlet push=0;\r\n\t\twhile(true){\r\n\t\t\tconst read=this.readByte();\r\n\t\t\tif(read==0) return push==0?0: ~result;\r\n\t\t\tif((read&0x80)==0){\r\n\t\t\t\tresult|=read<<push;\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\t\t\tresult|=(read&0x7f)<<push;\r\n\t\t\tpush+=7;\r\n\t\t}\r\n\t}\r\n\r\n\treadArray<T>(readFunction: ()=>T): T[]|null{\r\n\t\tconst length=this.readLength();\r\n\t\tif(length== -1) return null;\r\n\t\tconst arr: T[]=[];\r\n\t\tfor(let i=0; i<length; i++)\r\n\t\t\tarr[i]=readFunction.call(this);\r\n\t\treturn arr;\r\n\t}\r\n\r\n\treadError(){\r\n\t\treturn RpcError.read(this);\r\n\t}\r\n\r\n\treadDynamic(already: unknown[]=[]){\r\n\t\treturn readDynamic(this,already);\r\n\t}\r\n}","import {RpcName} from \"./RpcName.js\";\r\nimport {disposeConnection,receiveRpc} from \"./Connection.js\";\r\nimport {DataInput} from \"../types/data/DataInput.js\";\r\nimport {callRemoteFunction} from \"../types/functions/FunctionCallContext.js\";\r\nimport {registeredTypes} from \"../internal/RegisteredTypes.js\";\r\nimport {isNodeJs,RpcId} from \"./RpcId.js\";\r\nimport {RpcConnectionError} from \"../types/errors/PredefinedErrors.js\";\r\nimport {Rpc} from \"../rpc.js\";\r\n\r\n\r\nexport let isConnected=false;\r\n\r\n\r\nlet resolveWaitUntilConnected:VoidFunction,rejectWaitUntilConnected:(e:Error)=>void;\r\nlet waitUntilConnectedAttempt=new Promise<void>((res,rej)=>[resolveWaitUntilConnected,rejectWaitUntilConnected]=[res,rej]);\r\nwaitUntilConnectedAttempt.catch(()=>{\r\n});//Prevent uncaught error warning\r\n\r\nexport async function waitConnected(){\r\n\twhile(true)\r\n\t\tif(await waitUntilConnectedAttempt.then(()=>true,()=>false))\r\n\t\t\treturn;\r\n}\r\n\r\nlet createWebSocket:(query:URLSearchParams)=>Promise<WebSocket>;\r\nif(isNodeJs){\r\n\tconst RPC_URL=\"RPC_URL\" in globalThis?(globalThis as any)[\"RPC_URL\"]:process.env.RPC_URL;\r\n\tconst RPC_TOKEN=\"RPC_TOKEN\" in globalThis?(globalThis as any)[\"RPC_TOKEN\"]:process.env.RPC_TOKEN;\r\n\tif(!RPC_URL){\r\n\t\tconsole.warn(\"RPC_URL is not defined => RPC will not connect\");\r\n\t\tcreateWebSocket=async()=>({} as any as WebSocket);\r\n\t}else\r\n\t\tcreateWebSocket=async(query)=>{\r\n\t\t\tconst uri=new URL(RPC_URL);\r\n\t\t\turi.search=query.toString();\r\n\t\t\treturn new (await import(\"ws\")).WebSocket(uri,RPC_TOKEN==null?{}:{\r\n\t\t\t\theaders:{\r\n\t\t\t\t\tCookie:\"RPC_TOKEN=\"+RPC_TOKEN,\r\n\t\t\t\t},\r\n\t\t\t}) as unknown as WebSocket;\r\n\t\t};\r\n}else if(\"document\" in globalThis)\r\n\tcreateWebSocket=async(query)=>new WebSocket(\"ws\"+document.location.origin.substring(4)+\"/rpc?\"+query);\r\nelse{//Unknown Platform\r\n\tconst RPC_URL=\"RPC_URL\" in globalThis?(globalThis as any)[\"RPC_URL\"]:process.env.RPC_URL;\r\n\tconst RPC_TOKEN=\"RPC_TOKEN\" in globalThis?(globalThis as any)[\"RPC_TOKEN\"]:process.env.RPC_TOKEN;\r\n\tif(!RPC_URL){\r\n\t\tconsole.warn(\"RPC_URL is not defined => RPC will not connect\");\r\n\t\tcreateWebSocket=async()=>({} as any as WebSocket);\r\n\t}else\r\n\t\tcreateWebSocket=async(query)=>{\r\n\t\t\tconst uri=new URL(RPC_URL);\r\n\t\t\turi.search=query.toString();\r\n\t\t\treturn new WebSocket(uri,RPC_TOKEN==null?{}:{\r\n\t\t\t\theaders:{\r\n\t\t\t\t\tCookie:\"RPC_TOKEN=\"+RPC_TOKEN,\r\n\t\t\t\t},\r\n\t\t\t} as any) as unknown as WebSocket;\r\n\t\t};\r\n}\r\n\r\n\r\nfunction closeRpc(e:Error){\r\n\tconst reject=rejectWaitUntilConnected;\r\n\twaitUntilConnectedAttempt=new Promise<void>((res,rej)=>[resolveWaitUntilConnected,rejectWaitUntilConnected]=[res,rej]);\r\n\twaitUntilConnectedAttempt.catch(()=>{\r\n\t});//Prevent uncaught error warning\r\n\treject(e);\r\n\r\n\tdisposeConnection(e);\r\n}\r\n\r\n\r\n//connect\r\n\r\n\r\nexport let _webSocket:WebSocket | null=null;\r\n\r\n\r\nexport async function connectOnce(reconnect:VoidFunction){\r\n\tlet reportedName=RpcName;\r\n\tlet reportedTypes=new Set<string>();\r\n\r\n\tconst query=new URLSearchParams();\r\n\tquery.set(\"id\",RpcId);\r\n\treportedTypes.add(\"$\"+RpcId);\r\n\r\n\tif(reportedName!=null)\r\n\t\tquery.set(\"name\",reportedName);\r\n\r\n\tfor(let key of registeredTypes.keys())\r\n\t\tif(!reportedTypes.has(key)){\r\n\t\t\treportedTypes.add(key);\r\n\t\t\tquery.append(\"type\",key);\r\n\t\t}\r\n\r\n\r\n\tconst webSocket=await createWebSocket(query);\r\n\r\n\twebSocket.onclose=()=>{\r\n\t\tsetTimeout(reconnect,1000);\r\n\r\n\t\tif(!_webSocket) return;\r\n\t\t_webSocket=null;\r\n\t\tisConnected=false;\r\n\t\tconsole.log(\"Reconnecting to RPC\");\r\n\t\tcloseRpc(RpcConnectionError.new(\"Connection closed by \"+Rpc.prettyName));\r\n\t};\r\n\twebSocket.onopen=async()=>{\r\n\t\tconsole.log(\"Connected to RPC\");\r\n\r\n\t\ttry{\r\n\t\t\t_webSocket=webSocket;\r\n\r\n\t\t\tconst toRegister=new Set(registeredTypes.keys());\r\n\t\t\tconst toDelete=new Set(reportedTypes);\r\n\r\n\t\t\tfor(let type of toRegister)\r\n\t\t\t\tif(toDelete.delete(type))\r\n\t\t\t\t\ttoRegister.delete(type);\r\n\r\n\t\t\tif(toRegister.size||toDelete.size)\r\n\t\t\t\tif(RpcName!=reportedName) await callRemoteFunction(null,'H',RpcName,[...toRegister.keys()],[...toDelete.keys()]);\r\n\t\t\t\telse await callRemoteFunction(null,'H',[...toRegister.keys()],[...toDelete.keys()]);\r\n\t\t\telse if(RpcName!=reportedName) await callRemoteFunction(null,'H',RpcName);\r\n\r\n\t\t\tisConnected=true;\r\n\t\t\tresolveWaitUntilConnected();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t}catch(e:Error){\r\n\t\t\tconsole.error(\"Error registering types: \",e);\r\n\t\t\tcloseRpc(e);\r\n\r\n\t\t\twebSocket?.close(4000,\"Error registering types\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t};\r\n\r\n\twebSocket.binaryType=\"arraybuffer\";\r\n\twebSocket.onmessage=(e:MessageEvent)=>{\r\n\t\tconst data=e.data;\r\n\t\tif(typeof data==\"string\") console.log(data);\r\n\t\telse receiveRpc(new DataInput(new Uint8Array(data)));\r\n\t};\r\n}\r\n\r\n(async function connectLoop(){\r\n\tawait Promise.resolve();//Moves from main into the event loop\r\n\r\n\t// noinspection InfiniteLoopJS\r\n\twhile(true)\r\n\t\tawait new Promise<void>(\r\n\t\t\tresolve=>connectOnce(resolve));\r\n}());\r\n","import {isConnected} from \"./WebSocketConnection.js\";\r\nimport {callRemoteFunction} from \"../types/functions/FunctionCallContext.js\";\r\n\r\n\r\nexport let RpcName:string|null=null;\r\n\r\nexport async function setName(name:string|null){\r\n\tRpcName=name;\r\n\ttry{\r\n\t\tif(isConnected) await callRemoteFunction(null,'N',name);\r\n\t}catch(e){\r\n\t\tconsole.error(e);\r\n\t}\r\n}","import {DataOutput} from \"./DataOutput.js\";\r\nimport {DataInput} from \"./DataInput.js\";\r\nimport {readRegistry,writeRegistry} from \"./DynamicData.js\";\r\n\r\n\r\ninterface CustomDynamicTypeInstance{\r\n\twrite(outgoing:DataOutput,already:unknown[]):void;\r\n}\r\n\r\ninterface CustomDynamicType<T extends CustomDynamicTypeInstance>{\r\n\tnew(...arg: any[]):T;\r\n\tread(incoming:DataInput,already:unknown[]):CustomDynamicTypeInstance;\r\n}\r\n\r\nexport function CustomDynamicType(id: string){\r\n\treturn function<T extends CustomDynamicTypeInstance>(target: CustomDynamicType<T>){\r\n\t\twriteRegistry.push([id,d=>d instanceof target,(data,o,already)=>(o as T).write(data,already)]);\r\n\t\treadRegistry.set(id,(data,already)=>target.read(data,already));\r\n\t};\r\n}","import {registerType} from \"../internal/RegisteredTypes.js\";\r\n\r\nexport function RpcProvider(type?: string){\r\n\treturn function(target: any){\r\n\t\tregisterType(type??target.prototype.constructor.name,target).catch(console.error);\r\n\t};\r\n}\r\n","import {RpcName,setName} from \"./connection/RpcName.js\";\r\nimport {isConnected,waitConnected} from \"./connection/WebSocketConnection.js\";\r\nimport {createRemoteObject,RPC_ROOT,RpcObjectExists,RpcObjectGetMethods,RpcObjectType} from \"./types/RpcObject.js\";\r\nimport {registerFunction,RpcFunction,unregisterFunction} from \"./types/RpcFunction.js\";\r\nimport {\r\n\tcallLocal,\r\n\tcallRemoteFunction,\r\n\tFunctionCallContext,\r\n\tgetFunctionContext,\r\n\trunWithContext,\r\n} from \"./types/functions/FunctionCallContext.js\";\r\nimport {generateTypeName,registerType,unregisterType} from \"./internal/RegisteredTypes.js\";\r\nimport {RpcId} from \"./connection/RpcId.js\";\r\nimport {PendingCall} from \"./types/functions/PendingCall.js\";\r\n\r\n\r\nexport * from \"./types/data/DataInput.js\";\r\nexport * from \"./types/data/DataOutput.js\";\r\nexport {CustomDynamicType} from \"./types/data/CustomDynamicTypeDecorator.js\";\r\n\r\nexport type {FunctionCallContext} from \"./types/functions/FunctionCallContext.js\";\r\nexport * from \"./types/functions/PendingCall.js\";\r\n\r\nexport * from \"./types/RpcObject.js\";\r\nexport * from \"./types/RpcFunction.js\";\r\nexport * from \"./types/RpcError.js\";\r\nexport {RpcCustomError} from \"./types/errors/RpcCustomErrorDecorator.js\";\r\nexport * from \"./types/errors/PredefinedErrors.js\";\r\nexport {RpcProvider} from \"./types/RpcProviderDecorator.js\";\r\n\r\nimport(\"./rpc.js\").then((m)=>Object.assign(globalThis,m));\r\n\r\n// noinspection JSUnusedGlobalSymbols\r\nexport class Rpc{\r\n\r\n\t//Rpc\r\n\tpublic static readonly id:string=RpcId;\r\n\r\n\tpublic static get prettyName():string{\r\n\t\treturn Rpc.name!=null?`${Rpc.name} (${Rpc.id})`:Rpc.id;\r\n\t}\r\n\r\n\tpublic static get name():string | null{\r\n\t\treturn RpcName;\r\n\t}\r\n\t\r\n\tpublic static setName=setName;\r\n\r\n\t//Connection\r\n\tpublic static get isConnected():boolean{\r\n\t\treturn isConnected;\r\n\t}\r\n\r\n\tpublic static get waitUntilConnected():Promise<void>{\r\n\t\treturn waitConnected();\r\n\t}\r\n\r\n\t//Functions\r\n\tpublic static createObject=createRemoteObject;\r\n\tpublic static createFunction=<T>(type:string,method:string)=>new RpcFunction<T>(type,method);\r\n\tpublic static registerFunction=registerFunction;\r\n\tpublic static unregisterFunction=unregisterFunction;\r\n\r\n\tpublic static callLocal=callLocal;//Call function and get a PendingCall, this allows the use of the FunctionCallContext within the function\r\n\tpublic static callFunction=callRemoteFunction;//Call remote function\r\n\r\n\tpublic static getContext:()=>FunctionCallContext=getFunctionContext;\r\n\tpublic static runWithContext=runWithContext;\r\n\r\n\t//Types\r\n\tpublic static registerType=registerType;\r\n\tpublic static unregisterType=unregisterType;\r\n\tpublic static generateTypeName=generateTypeName;\r\n\t\r\n\r\n\tpublic static getObjectWithFallback=async(type:string,...types:string[]):Promise<number>=>await callRemoteFunction(\"Rpc\",\"getObjectWithFallback\",type,...types);\r\n\tpublic static checkTypes=async(...types:string[]):Promise<number>=>await callRemoteFunction(\"Rpc\",\"checkTypes\",...types);\r\n\tpublic static checkType=async(type:string):Promise<boolean>=>await callRemoteFunction(\"Rpc\",\"checkType\",type);\r\n\tpublic static getAllTypes=async():Promise<string[]>=>await callRemoteFunction(\"Rpc\",\"getAllTypes\");\r\n\tpublic static getAllConnections=async():Promise<string[]>=>await callRemoteFunction(\"Rpc\",\"getAllConnections\");\r\n\tpublic static getRegistrations=async(includeHidden:boolean=false):Promise<(Record<string,string[]>)>=>await callRemoteFunction(\"Rpc\",\"getRegistrations\",includeHidden);\r\n\tpublic static evalObject=async(expression:string):Promise<any>=>await callRemoteFunction(\"Rpc\",\"evalObject\",expression);\r\n\tpublic static evalString=async(expression:string):Promise<string>=>await callRemoteFunction(\"Rpc\",\"evalString\",expression);\r\n\tpublic static listenCalls=():PendingCall=>callRemoteFunction(\"Rpc\",\"listenCalls\");\r\n\r\n\tpublic static root=RPC_ROOT;\r\n\tpublic static type=RpcObjectType;\r\n\tpublic static exists=RpcObjectExists;\r\n\tpublic static getMethods=RpcObjectGetMethods;\r\n}\r\n\r\n\r\n//import \"./_test/webTest.js\""],"names":["RpcCustomErrors","RpcCustomError","typeTag","target","tagToError","errorToTag","__name","root","factory","module","this","_isNumber","n","_capitalize","str","_getter","p","booleanProps","numericProps","stringProps","arrayProps","objectProps","props","StackFrame","obj","i","v","fileName","lineNumber","columnNumber","functionName","argsStartIndex","argsEndIndex","args","locationString","parts","j","k","require$$0","FIREFOX_SAFARI_STACK_REGEXP","CHROME_IE_STACK_REGEXP","SAFARI_NATIVE_CODE_REGEXP","error","urlLike","regExp","filtered","line","sanitizedLine","location","locationParts","functionNameRegex","matches","e","lineRE","lines","result","len","match","tokens","functionCall","argsRaw","fixString","s","framesToString","frames","frame","causeToString","cause","RpcError","ErrorStackParser","removeFromStackTrace","ownStack","#ownStack","#stackTrace","#causes","#appendStack","from","message","stackTrace","data","Rpc","causeIndex","trace","output","input","type","constructor","stackSource","skip","method","a","isNodeJs","chars","randomId","RpcId","quoted","RpcCallError","RpcTypeNotFoundError","__publicField","__decorateClass","RpcMethodNotFoundError","RpcMetaMethodNotFoundError","meta","RpcConnectionError","RpcEvalError","registeredFunctions","registeredTypes","generateTypeName","registerType","invoker","isConnected","callRemoteFunction","unregisterType","getMethods","getter","RpcObjectGetMethods","key","invoke","func","ignoreCase","reference","PendingCall","dispose","resolve","reject","resolveCall","t","rejectCall","freeDynamic","onrejected","onfinally","onfulfilled","_args","registerReceive","getAsyncIterator","call","didReceive","waitReceive","request","res","pendingMap","listenersMap","pendings","pending","runReceiveMessage","currentContext","runWithContext","context","previous","getFunctionContext","nextId","local","callLocalFunction","already","buff","DataOutput","callId","PacketType","d","_webSocket","msgArgs","msg","list","sendRaw","sendCall","callLocal","controller","sending","received","invokeForPromise","RpcFunction","functionCache","registerFunction","id","unregisterFunction","RpcObjectType","RpcObjectExists","createRemoteObject","cache","_","argArray","RPC_ROOT","prop","writeRegistry","readRegistry","readDynamic","objectId","o","registryEntry","pattern","flags","objectType","writeDynamic","rpcFunc","onFree","buffer","element","check","write","idBytes","entries","value","size","additional","replacement","b","buf","c","array","u","arr","writeFunction","activeRequests","currentlyExecuting","disposeConnection","ctx","receiveRpc","finished","promise","rej","DataInput","pos","length","off","push","read","readFunction","resolveWaitUntilConnected","rejectWaitUntilConnected","waitUntilConnectedAttempt","waitConnected","createWebSocket","RPC_URL","RPC_TOKEN","query","uri","closeRpc","connectOnce","reconnect","reportedName","RpcName","reportedTypes","webSocket","toRegister","toDelete","setName","name","CustomDynamicType","RpcProvider","rpc","m","types","includeHidden","expression"],"mappings":"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","x_google_ignoreList":[1,2]}